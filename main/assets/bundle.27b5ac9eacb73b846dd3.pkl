["2ByC2BzZD6DYHIJucHJldF9mYWN0b3J5XzDYHIPYHIDYHNkPoNgcgm5wcmV0X2ZhY3RvcnlfMdgc\ngdgc2Q+g2ByCbnByZXRfZmFjdG9yeV8y2ByB2BzZD6DYHIJucHJldF9mYWN0b3J5XzPYHIbYHNgc\n2Q+g2ByCbnByZXRfZmFjdG9yeV802ByD2BzZD6DYHIJucHJldF9mYWN0b3J5XzXYHIDYHLdxYW5u\nb3RhdGlvbl9zdHlsZXNwYW5ub3RhdGlvblN0eWxlc29tb3VzZV9zZWxlY3Rpb25ubW91c2VTZWxl\nY3Rpb25ob25fY2xpY2tnb25DbGlja2xvbl9rZXlfcHJlc3Nqb25LZXlQcmVzc3Rvbl9tb3VzZV9l\nbnRlcl9zaGFwZXFvbk1vdXNlRW50ZXJTaGFwZXRvbl9tb3VzZV9sZWF2ZV9zaGFwZXFvbk1vdXNl\nTGVhdmVTaGFwZW9vbl9tb3VzZV9zZWxlY3Rtb25Nb3VzZVNlbGVjdHBoaWdobGlnaHRlZF9yb3dz\nb2hpZ2hsaWdodGVkUm93c2tpbnB1dF92YWx1ZWppbnB1dFZhbHVlb29uX2lucHV0X2NoYW5nZW1v\nbklucHV0Q2hhbmdlcG9uX3Njcm9sbF9ib3R0b21ub25TY3JvbGxCb3R0b21ncm93X2tleWZyb3dL\nZXlrYXV0b19maWx0ZXJqYXV0b0ZpbHRlcm5vbl9jZWxsX2NoYW5nZWxvbkNlbGxDaGFuZ2V1b25f\nY2xpY2tfY2VsbF9jb250ZW50cm9uQ2xpY2tDZWxsQ29udGVudHFvbl9maWx0ZXJzX2NoYW5nZW9v\nbkZpbHRlcnNDaGFuZ2Vyb25fbW91c2VfZW50ZXJfcm93b29uTW91c2VFbnRlclJvd3Jvbl9tb3Vz\nZV9sZWF2ZV9yb3dvb25Nb3VzZUxlYXZlUm93cm9uX3Bvc2l0aW9uX2NoYW5nZXBvblBvc2l0aW9u\nQ2hhbmdlcG9uX3N1YnNldF9jaGFuZ2Vub25TdWJzZXRDaGFuZ2Vtb25fY2xpY2tfc3BhbmtvbkNs\naWNrU3BhbnNvbl9tb3VzZV9lbnRlcl9zcGFucG9uTW91c2VFbnRlclNwYW5zb25fbW91c2VfbGVh\ndmVfc3BhbnBvbk1vdXNlTGVhdmVTcGFu2BzZD6DYHIJucHJldF9mYWN0b3J5XzbYHIDYHKJncHJp\nbWFyedgcpmtzdHJva2VDb2xvcmNyZWRrc3Ryb2tlV2lkdGgCaWZpbGxDb2xvcnFyZ2JhKDI1NSww\nLDAsMC41KW1sYWJlbFBvc2l0aW9uZmNlbnRlcmVhbGlnbmZjZW50ZXJtdmVydGljYWxBbGlnbmN0\nb3Bpc2Vjb25kYXJ52Byka3N0cm9rZUNvbG9yZGJsdWVrc3Ryb2tlV2lkdGgCaWZpbGxDb2xvcmkj\nMDAwMGZmODBpdGV4dENvbG9yZXdoaXRl2BzZD6LYHILYHNkPoNgcgm5wcmV0X2ZhY3RvcnlfN9gc\ngNgcgtgc2Q+i2ByC2BzZD6DYHIJucHJldF9mYWN0b3J5XzjYHIHYHNgc2Q+g2ByCbnByZXRfZmFj\ndG9yeV852ByB2BzZD6HYHIR3U3RhbmRhbG9uZUNsaWVudE1hbmFnZXLYHIHYHNkPodgchGdNYW5h\nZ2Vy2ByB2BzZD6DYHIJvcHJldF9mYWN0b3J5XzEw2ByA2BywZ19fZG9jX1/2aF9faW5pdF9f2BzZ\nD6DYHIJvcHJldF9mYWN0b3J5XzEx2ByD2BzZD6DYHIJvcHJldF9mYWN0b3J5XzEy2ByA2BzZD6DY\nHIJvcHJldF9mYWN0b3J5XzEz2ByA2BzZD6DYHIJvcHJldF9mYWN0b3J5XzE02ByAal9fbW9kdWxl\nX19scHJldC5tYW5hZ2Vyd2hhbmRsZV9jYWxsX2ZhaWx1cmVfbXNn2BzZD6DYHIJvcHJldF9mYWN0\nb3J5XzE12ByAb2hhbmRsZV9jYWxsX21zZ9gc2Q+g2ByCb3ByZXRfZmFjdG9yeV8xNtgcgdgc2Q+g\n2ByCb3ByZXRfZmFjdG9yeV8xN9gcgHdoYW5kbGVfY2FsbF9zdWNjZXNzX21zZ9gc2Q+g2ByCb3By\nZXRfZmFjdG9yeV8xONgcgG5oYW5kbGVfbWVzc2FnZdgc2Q+g2ByCb3ByZXRfZmFjdG9yeV8xOdgc\ngHdoYW5kbGVfc3RhdGVfY2hhbmdlX21zZ9gc2Q+g2ByCb3ByZXRfZmFjdG9yeV8yMNgcgdgc2Q+g\n2ByCb3ByZXRfZmFjdG9yeV8yMdgcgHgdaGFuZGxlX3N0YXRlX3N5bmNfcmVxdWVzdF9tc2fYHNkP\noNgcgm9wcmV0X2ZhY3RvcnlfMjLYHIBnbWFuYWdlcvZ0cmVnaXN0ZXJfY2FsbF9mdXR1cmXYHNkP\noNgcgm9wcmV0X2ZhY3RvcnlfMjPYHIBxcmVnaXN0ZXJfZnVuY3Rpb27YHNkPoNgcgm9wcmV0X2Zh\nY3RvcnlfMjTYHIHYHNkPoNgcgm9wcmV0X2ZhY3RvcnlfMjXYHIBucmVnaXN0ZXJfc3RhdGXYHNkP\noNgcgm9wcmV0X2ZhY3RvcnlfMjbYHIBpc2VuZF9jYWxs2BzZD6DYHIJvcHJldF9mYWN0b3J5XzI3\n2ByE2BzZD6DYHIJvcHJldF9mYWN0b3J5XzI42ByA2B0YR9gdGD7YHNkPoNgcgm9wcmV0X2ZhY3Rv\ncnlfMjnYHIBsc2VuZF9tZXNzYWdl2BzZD6DYHIJvcHJldF9mYWN0b3J5XzMw2ByAcXNlbmRfc3Rh\ndGVfY2hhbmdl2BzZD6DYHIJvcHJldF9mYWN0b3J5XzMx2ByB2BzZD6DYHIJvcHJldF9mYWN0b3J5\nXzMy2ByA2BytaF9faW5pdF9f2B0YNXdoYW5kbGVfY2FsbF9mYWlsdXJlX21zZ9gdGEFvaGFuZGxl\nX2NhbGxfbXNn2B0YRHdoYW5kbGVfY2FsbF9zdWNjZXNzX21zZ9gdGEpuaGFuZGxlX21lc3NhZ2XY\nHRhNd2hhbmRsZV9zdGF0ZV9jaGFuZ2VfbXNn2B0YUHgdaGFuZGxlX3N0YXRlX3N5bmNfcmVxdWVz\ndF9tc2fYHRhWdHJlZ2lzdGVyX2NhbGxfZnV0dXJl2B0YWXFyZWdpc3Rlcl9mdW5jdGlvbtgdGFxu\ncmVnaXN0ZXJfc3RhdGXYHRhiaXNlbmRfY2FsbNgdGGVsc2VuZF9tZXNzYWdl2B0YbnFzZW5kX3N0\nYXRlX2NoYW5nZdgdGHHYHKJoX19pbml0X1/YHNkPoNgcgm9wcmV0X2ZhY3RvcnlfMzPYHILYHNkP\noNgcgm9wcmV0X2ZhY3RvcnlfMzTYHIDYHNkPoNgcgm9wcmV0X2ZhY3RvcnlfMzXYHIBsc2VuZF9t\nZXNzYWdl2BzZD6DYHIJvcHJldF9mYWN0b3J5XzM22ByD2BzZD6DYHIJvcHJldF9mYWN0b3J5XzM3\n2ByA2BzZD6DYHIJvcHJldF9mYWN0b3J5XzM42ByA2B0YR9gcomhfX2luaXRfX9gdGHlsc2VuZF9t\nZXNzYWdl2B0Ygtgcg1iMAQic6OKmCQAnAQFfAV8ABwCc6OKmCQABKACc6OKmCQECaWQBdwExKACc\n6OKmCQEEdHlwZQF3B3BvbHlnb24nAJzo4qYJAQZwb2ludHMACACc6OKmCQQEfQp9Cn0yfRQoAJzo\n4qYJAQVsYWJlbAF3A09CSigAnOjipgkBBXN0eWxlAXcHcHJpbWFyeQDYHKD22ByCYV9hX9gc2Q+g\n2ByCb3ByZXRfZmFjdG9yeV8zOdgcgNgc2Q+g2ByCb3ByZXRfZmFjdG9yeV80MNgcgNgc2Q+g2ByC\nb3ByZXRfZmFjdG9yeV80MdgcgNgcoNgc2Q+i2ByC2B0YJ9gdBA==\n", "if(window.pret_modules===undefined){window.pret_modules={};}\nvar pret_modules=window.pret_modules;\npret_modules.js=window;\npret_modules['json']=(function(){var __name__ = \"json\";\n\n\nfunction __ensure_ascii(s) {\n  return s.replace(/[\\u007F-\\uFFFF]/g,\n    function(c) {\n      var hex = c.charCodeAt(0).toString(16).padStart(4, \"0\");\n      return \"\\\\u\" + hex;\n    });\n}\n\nfunction __sort_keys(value) {\n  if (Array.isArray(value)) {\n    return value.map(__sort_keys);\n  } else if (value !== null && typeof value === \"object\") {\n    var out = {};\n    Object.keys(value).sort().forEach(function(k) {\n      out [k] = __sort_keys(value [k]);\n    });\n    return out;\n  }\n  return value;\n}\n\nfunction dumps(obj /* \u2026kwargs */) {\n\n  var kwargs = arguments.length > 1 ? arguments [arguments.length - 1] : null;\n  if (!kwargs || !kwargs.__kwargtrans__) {\n    kwargs = {};\n  }\n\n  var indent = kwargs.indent ?? null;\n  var sort_keys = kwargs.sort_keys ?? false;\n  var ensure_ascii = kwargs.ensure_ascii ?? true;\n  var default_fn = kwargs.default ?? null;\n  var allow_nan = kwargs.allow_nan ?? true;\n\n\n  function replacer(key, value) {\n\n    var val = value;\n\n    if (typeof val === \"number\") {\n      if (!allow_nan && (!isFinite(val))) {\n        throw __builtins__.ValueError(\"Out of range float values are not JSON compliant\");\n      }\n\n    }\n    if (val === undefined || typeof val === \"function\" || typeof val === \"symbol\") {\n\n      return undefined;\n    }\n    if (val !== null && typeof val === \"object\") {\n      return val;\n    }\n    return val;\n  }\n\n\n  var to_dump = sort_keys ? __sort_keys(obj) : obj;\n\n  var jsonStr = JSON.stringify(\n    to_dump,\n    default_fn\n      ? function(k, v) {\n\n        try {\n          return replacer(k, v);\n        } catch (e) {\n          throw e;\n        }\n\n      }\n      : replacer,\n    indent\n  );\n\n  if (ensure_ascii) {\n    jsonStr = __ensure_ascii(jsonStr);\n  }\n  return jsonStr;\n}\n\nfunction loads(s /* \u2026kwargs */) {\n  var kwargs = arguments.length > 1 ? arguments [arguments.length - 1] : null;\n  if (!kwargs || !kwargs.__kwargtrans__) {\n    kwargs = {};\n  }\n\n  var object_hook = kwargs.object_hook ?? null;\n  var parse_float = kwargs.parse_float ?? null;\n  var parse_int = kwargs.parse_int ?? null;\n  var parse_constant = kwargs.parse_constant ?? null;\n\n\n  function reviver(key, value) {\n    if (typeof value === \"string\") {\n      if (parse_constant && (value === \"NaN\" || value === \"Infinity\" || value === \"-Infinity\")) {\n        return parse_constant(value);\n      }\n    }\n    if (typeof value === \"number\") {\n      if (!Number.isInteger(value) && parse_float) {\n        return parse_float(String(value));\n      } else if (Number.isInteger(value) && parse_int) {\n        return parse_int(String(value));\n      }\n    }\n    return value;\n  }\n\n  var result = JSON.parse(s, (parse_float || parse_int || parse_constant) ? reviver : undefined);\n\n  if (object_hook && result !== null && typeof result === \"object\" && !Array.isArray(result)) {\n    return object_hook(result);\n  }\n  return result;\n}\n\n\n//# sourceMappingURL=json.map\nreturn {dumps, loads};})();\n\npret_modules['weakref']=(function(){var { _class_, object, __get__, py_TypeError, py_KeyError } = pret_modules['org.transcrypt.__runtime__'];\n\nvar __name__ = \"weakref\";\n\nvar ref = _class_(\"ref\", [object], {\n  __module__: __name__,\n\n  get __init__() {\n    return __get__(this, function(self, obj, callback) {\n      // obj: the target object to reference weakly\n      // callback: optional function to call with the ref instance when obj is GC\u2019ed\n\n      // Store a WeakRef to the target object\n      self._ref = new WeakRef(obj);\n\n      if (callback !== undefined && callback !== null) {\n        // Capture `self` to use inside the FinalizationRegistry callback\n        var _self = self;\n        // Create a FinalizationRegistry that will invoke `callback(_self)`\n        self._registry = new FinalizationRegistry(function(heldValue) {\n          // heldValue is the ref instance (i.e., _self)\n          try {\n            // Invoke callback, passing the weakref instance\n            callback(heldValue);\n          } catch (err) {\n            // Silently ignore exceptions in the user\u2019s callback\n          }\n        });\n        // Register the target object with the registry, holding `self` as token\n        self._registry.register(obj, _self);\n      }\n    });\n  },\n\n  // __call__ returns the referenced object or null if it has been collected\n  get __call__() {\n    return __get__(this, function(self) {\n      var deref = self._ref.deref();\n      // In JavaScript, WeakRef.deref() returns `undefined` if collected\n      return (deref === undefined ? null : deref);\n    });\n  },\n\n  // Optionally, allow checking if the referent is still alive:\n  get alive() {\n    return __get__(this, function(self) {\n      return (self._ref.deref() !== undefined);\n    });\n  }\n});\n\nvar WeakKeyDictionary = _class_(\"WeakKeyDictionary\", [object], {\n  __module__: __name__,\n\n  get __init__() {\n    return __get__(this, function(self) {\n      // Underlying WeakMap holds keys weakly\n      self._wm = new WeakMap();\n    });\n  },\n\n  get __setitem__() {\n    return __get__(this, function(self, key, value) {\n      // Keys must be non-null objects\n      if ((typeof key !== \"object\" && typeof key !== \"function\") || key === null) {\n        throw py_TypeError(\"WeakKeyDictionary keys must be objects\");\n      }\n      self._wm.set(key, value);\n    });\n  },\n\n  get __getitem__() {\n    return __get__(this, function(self, key) {\n      var val = self._wm.get(key);\n      if (val === undefined) {\n        // If `undefined`, either key not present or stored value was actually `undefined`.\n        // We assume no one stores literal `undefined` as a value; mimic Python KeyError.\n        throw py_KeyError(key);\n      }\n      return val;\n    });\n  },\n\n  get __delitem__() {\n    return __get__(this, function(self, key) {\n      var success = self._wm.delete(key);\n      if (!success) {\n        throw py_KeyError(key);\n      }\n    });\n  },\n\n  get __contains__() {\n    return __get__(this, function(self, key) {\n      return self._wm.has(key);\n    });\n  },\n\n  // get(key, default=None)\n  get get() {\n    return __get__(this, function(self, key, defaultValue) {\n      if (defaultValue === undefined) {\n        defaultValue = null;  // Transcrypt maps None \u2192 null\n      }\n      var val = self._wm.get(key);\n      return (val === undefined ? defaultValue : val);\n    });\n  },\n\n  // pop(key, default=_marker): if key missing and default not given, raise KeyError\n  get pop() {\n    return __get__(this, function(self, key, defaultValue) {\n      var has = self._wm.has(key);\n      if (!has) {\n        if (defaultValue === undefined) {\n          throw py_KeyError(key);\n        }\n        return defaultValue;\n      }\n      var val = self._wm.get(key);\n      self._wm.delete(key);\n      return val;\n    });\n  },\n\n  // Optional: clear all entries (not typical in a real WeakMap, but we can recreate it)\n  get clear() {\n    return __get__(this, function(self) {\n      self._wm = new WeakMap();\n    });\n  }\n});\n\nvar WeakValueDictionary = _class_(\"WeakValueDictionary\", [object], {\n  __module__: __name__,\n\n  get __init__() {\n    return __get__(this, function(self) {\n      // Underlying Map holds keys \u2192 WeakRef(value)\n      self._map = new Map();\n\n      // FinalizationRegistry will receive the key as \u201cheldValue\u201d when a value is GC\u2019ed\n      var _self = self;\n      self._registry = new FinalizationRegistry(function(heldKey) {\n        // Remove the entry for that key when its value is collected\n        try {\n          _self._map.delete(heldKey);\n        } catch (err) {\n          // Silently ignore if deletion fails\n        }\n      });\n    });\n  },\n\n  get __setitem__() {\n    return __get__(this, function(self, key, value) {\n      // Create a WeakRef to the value\n      var wref = new WeakRef(value);\n      self._map.set(key, wref);\n      // Register the value; when it\u2019s GC\u2019ed, callback gets \u201cheldKey\u201d\n      self._registry.register(value, key);\n    });\n  },\n\n  get __getitem__() {\n    return __get__(this, function(self, key) {\n      var wref = self._map.get(key);\n      if (wref === undefined) {\n        throw py_KeyError(key);\n      }\n      var val = wref.deref();\n      if (val === undefined) {\n        // Value was collected; remove stale entry and raise KeyError\n        self._map.delete(key);\n        throw py_KeyError(key);\n      }\n      return val;\n    });\n  },\n\n  get __delitem__() {\n    return __get__(this, function(self, key) {\n      var existed = self._map.delete(key);\n      if (!existed) {\n        throw py_KeyError(key);\n      }\n    });\n  },\n\n  get __contains__() {\n    return __get__(this, function(self, key) {\n      var wref = self._map.get(key);\n      if (wref === undefined) {\n        return false;\n      }\n      var val = wref.deref();\n      if (val === undefined) {\n        // Stale entry; clean it up\n        self._map.delete(key);\n        return false;\n      }\n      return true;\n    });\n  },\n\n  // get(key, default=None)\n  get get() {\n    return __get__(this, function(self, key, defaultValue) {\n      if (defaultValue === undefined) {\n        defaultValue = null;\n      }\n      var wref = self._map.get(key);\n      if (wref === undefined) {\n        return defaultValue;\n      }\n      var val = wref.deref();\n      if (val === undefined) {\n        self._map.delete(key);\n        return defaultValue;\n      }\n      return val;\n    });\n  },\n\n  // pop(key, default=_marker)\n  get pop() {\n    return __get__(this, function(self, key, defaultValue) {\n      var wref = self._map.get(key);\n      if (wref === undefined) {\n        if (defaultValue === undefined) {\n          throw py_KeyError(key);\n        }\n        return defaultValue;\n      }\n      var val = wref.deref();\n      self._map.delete(key);\n      if (val === undefined) {\n        if (defaultValue === undefined) {\n          throw py_KeyError(key);\n        }\n        return defaultValue;\n      }\n      return val;\n    });\n  },\n\n  // items(): generator that yields [key, value] pairs for live values\n  get items() {\n    return __get__(this, function* (self) {\n      for (var pair of self._map.entries()) {\n        var key = pair[0];\n        var wref = pair[1];\n        var val = wref.deref();\n        if (val === undefined) {\n          // Clean up stale\n          self._map.delete(key);\n        } else {\n          yield [key, val];\n        }\n      }\n    });\n  },\n\n  // clear all entries\n  get clear() {\n    return __get__(this, function(self) {\n      self._map = new Map();\n    });\n  }\n});\n\n\n//# sourceMappingURL=weakref.map\nreturn {ref, WeakKeyDictionary, WeakValueDictionary};})();\n\npret_modules['time']=(function(){// Transcrypt'ed from Python, 2025-08-21 17:51:46\nvar { AssertionError, AttributeError, BaseException, DeprecationWarning, Exception, IndexError, IterableError, KeyError, NotImplementedError, RuntimeWarning, StopIteration, UserWarning, ValueError, Warning, __JsIterator__, __PyIterator__, __Terminal__, __add__, __and__, __call__, __envir__, __eq__, __floordiv__, __ge__, __get__, __getcm__, __getitem__, __getslice__, __getsm__, __gt__, __i__, __iadd__, __iand__, __idiv__, __ijsmod__, __ilshift__, __imatmul__, __imod__, __imul__, __in__, __init__, __ior__, __ipow__, __irshift__, __isub__, __ixor__, __jsUsePyNext__, __jsmod__, __k__, __kwargtrans__, __le__, __lshift__, __lt__, __matmul__, __mergefields__, __mergekwargtrans__, __mod__, __mul__, __ne__, __neg__, __nest__, __or__, __pow__, __pragma__, __proxy__, __pyUseJsNext__, __rshift__, __setitem__, __setproperty__, __setslice__, __sort__, __specialattrib__, __sub__, __super__, __t__, __terminal__, __truediv__, __withblock__, __xor__, _class_, abs, all, any, assert, bool, bytearray, bytes, callable, chr, copy, deepcopy, delattr, dict, dir, divmod, enumerate, filter, float, getattr, hasattr, input, int, isinstance, issubclass, len, list, map, max, min, object, ord, pow, print, property, py_TypeError, py_iter, py_metatype, py_next, py_reversed, py_typeof, range, repr, round, set, setattr, sorted, str, sum, tuple, zip } = pret_modules['org.transcrypt.__runtime__'];\nvar __name__ = 'time';\ntry {\n\tvar __language = window.navigator.language;\n}\ncatch (__except0__) {\n\tvar __language = 'en-US';\n}var __debugGetLanguage = function () {\n\treturn __language;\n};var __adapt__ = function (request) {\n\t__language = request.headers ['accept-language'].py_split (',') [0];\n};var __date = new Date (0);var __now = new Date ();var __weekdays = [];var __weekdays_long = [];var __d = new Date (1467662339080);\nfor (var i = 0; i < 7; i++) {\n\tfor (var [l, s] of tuple ([tuple ([__weekdays, 'short']), tuple ([__weekdays_long, 'long'])])) {\n\t\tl.append (__d.toLocaleString (__language, dict ([['weekday', s]])).lower ());\n\t}\n\t__d.setDate (__d.getDate () + 1);\n}var __months = [];var __months_long = [];\nvar __d = new Date (946681200000.0);\nfor (var i = 0; i < 12; i++) {\n\tfor (var [l, s] of tuple ([tuple ([__months, 'short']), tuple ([__months_long, 'long'])])) {\n\t\tl.append (__d.toLocaleString (__language, dict ([['month', s]])).lower ());\n\t}\n\t__d.setMonth (__d.getMonth () + 1);\n}var __lu = dict ([['Y', 0], ['m', 1], ['d', 2], ['H', 3], ['M', 4], ['S', 5]]);var _lsplit = function (s, sep, maxsplit) {\n\tif (maxsplit == 0) {\n\t\treturn [s];\n\t}\n\tvar py_split = s.py_split (sep);\n\tif (!(maxsplit)) {\n\t\treturn py_split;\n\t}\n\tvar ret = py_split.slice (0, maxsplit, 1);\n\tif (len (ret) == len (py_split)) {\n\t\treturn ret;\n\t}\n\tret.append (sep.join (py_split.__getslice__ (maxsplit, null, 1)));\n\treturn ret;\n};var _local_time_tuple = function (jd) {\n\tvar res = tuple ([jd.getFullYear (), jd.getMonth () + 1, jd.getDate (), jd.getHours (), jd.getMinutes (), jd.getSeconds (), (jd.getDay () > 0 ? jd.getDay () - 1 : 6), _day_of_year (jd, true), _daylight_in_effect (jd), jd.getMilliseconds ()]);\n\treturn res;\n};var _utc_time_tuple = function (jd) {\n\tvar res = tuple ([jd.getUTCFullYear (), jd.getUTCMonth () + 1, jd.getUTCDate (), jd.getUTCHours (), jd.getUTCMinutes (), jd.getUTCSeconds (), jd.getUTCDay () - 1, _day_of_year (jd, false), 0, jd.getUTCMilliseconds ()]);\n\treturn res;\n};var _day_of_year = function (jd, local) {\n\tvar day_offs = 0;\n\tif (jd.getHours () + (jd.getTimezoneOffset () * 60) / 3600 < 0) {\n\t\tvar day_offs = -(1);\n\t}\n\tvar was = jd.getTime ();\n\tvar cur = jd.setHours (23);\n\tjd.setUTCDate (1);\n\tjd.setUTCMonth (0);\n\tjd.setUTCHours (0);\n\tjd.setUTCMinutes (0);\n\tjd.setUTCSeconds (0);\n\tvar res = round ((cur - jd) / 86400000);\n\tif (!(local)) {\n\t\tres += day_offs;\n\t}\n\tif (res == 0) {\n\t\tvar res = 365;\n\t\tjd.setTime (jd.getTime () - 86400);\n\t\tvar last_year = jd.getUTCFullYear ();\n\t\tif (_is_leap (last_year)) {\n\t\t\tvar res = 366;\n\t\t}\n\t}\n\tjd.setTime (was);\n\treturn res;\n};var _is_leap = function (year) {\n\treturn __mod__ (year, 4) == 0 && (__mod__ (year, 100) != 0 || __mod__ (year, 400) == 0);\n};var __jan_jun_tz = function (t, func) {\n\tvar was = t.getTime ();\n\tt.setDate (1);\n\tvar res = [];\n\tfor (var m of tuple ([0, 6])) {\n\t\tt.setMonth (m);\n\t\tif (!(func)) {\n\t\t\tres.append (t.getTimezoneOffset ());\n\t\t}\n\t\telse {\n\t\t\tres.append (func (t));\n\t\t}\n\t}\n\tt.setTime (was);\n\treturn res;\n};var _daylight = function (t) {\n\tvar jj = __jan_jun_tz (t);\n\tif (jj [0] != jj [1]) {\n\t\treturn 1;\n\t}\n\treturn 0;\n};var _daylight_in_effect = function (t) {\n\tvar jj = __jan_jun_tz (t);\n\tif (min (jj [0], jj [1]) == t.getTimezoneOffset ()) {\n\t\treturn 1;\n\t}\n\treturn 0;\n};var _timezone = function (t) {\n\tvar jj = __jan_jun_tz (t);\n\treturn max (jj [0], jj [1]);\n};var __tzn = function (t) {\n\ttry {\n\t\treturn str (t).py_split ('(') [1].py_split (')') [0];\n\t}\n\tcatch (__except0__) {\n\t\treturn 'n.a.';\n\t}\n};var _tzname = function (t) {\n\tvar cn = __tzn (t);\n\tvar ret = [cn, cn];\n\tvar jj = __jan_jun_tz (t, __tzn);\n\tvar ind = 0;\n\tif (!(_daylight_in_effect (t))) {\n\t\tvar ind = 1;\n\t}\n\tfor (var i of jj) {\n\t\tif (i != cn) {\n\t\t\tret [ind] = i;\n\t\t}\n\t}\n\treturn tuple (ret);\n};var altzone = __now.getTimezoneOffset ();\nif (!(_daylight_in_effect (__now))) {\n\tvar _jj = __jan_jun_tz (__now);\n\tvar altzone = (altzone == _jj [1] ? _jj [0] : _jj [1]);\n}\nvar altzone = altzone * 60;var timezone = _timezone (__now) * 60;var daylight = _daylight (__now);var tzname = _tzname (__now);var time = function () {\n\treturn Date.now () / 1000;\n};var asctime = function (t) {\n\treturn strftime ('%a %b %d %H:%M:%S %Y', t);\n};var mktime = function (t) {\n\tvar d = new Date (t [0], t [1] - 1, t [2], t [3], t [4], t [5], 0);\n\treturn (d - 0) / 1000;\n};var ctime = function (seconds) {\n\tif (!(seconds)) {\n\t\tvar seconds = time ();\n\t}\n\treturn asctime (localtime (seconds));\n};var localtime = function (seconds) {\n\tif (!(seconds)) {\n\t\tvar seconds = time ();\n\t}\n\treturn gmtime (seconds, true);\n};var gmtime = function (seconds, localtime) {\n\tif (!(seconds)) {\n\t\tvar seconds = time ();\n\t}\n\tvar millis = seconds * 1000;\n\t__date.setTime (millis);\n\tif (localtime) {\n\t\tvar t = _local_time_tuple (__date);\n\t}\n\telse {\n\t\tvar t = _utc_time_tuple (__date);\n\t}\n\treturn t.__getslice__ (0, 9, 1);\n};var strptime = function (string, format) {\n\tif (!(format)) {\n\t\tvar format = '%a %b %d %H:%M:%S %Y';\n\t}\n\tvar __left0__ = tuple ([string, format]);\n\tvar ts = __left0__ [0];\n\tvar fmt = __left0__ [1];\n\tvar get_next = function (fmt) {\n\t\tvar get_sep = function (fmt) {\n\t\t\tvar res = [];\n\t\t\tif (!(fmt)) {\n\t\t\t\treturn tuple (['', '']);\n\t\t\t}\n\t\t\tfor (var i = 0; i < len (fmt) - 1; i++) {\n\t\t\t\tvar c = fmt [i];\n\t\t\t\tif (c == '%') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tres.append (c);\n\t\t\t}\n\t\t\treturn tuple ([''.join (res), fmt.__getslice__ (i, null, 1)]);\n\t\t};\n\t\tvar __left0__ = tuple ([null, null, null]);\n\t\tvar d = __left0__ [0];\n\t\tvar sep = __left0__ [1];\n\t\tvar f = __left0__ [2];\n\t\tif (fmt) {\n\t\t\tif (fmt [0] == '%') {\n\t\t\t\tvar d = fmt [1];\n\t\t\t\tvar __left0__ = get_sep (fmt.__getslice__ (2, null, 1));\n\t\t\t\tvar sep = __left0__ [0];\n\t\t\t\tvar f = __left0__ [1];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar __left0__ = get_sep (fmt);\n\t\t\t\tvar sep = __left0__ [0];\n\t\t\t\tvar f = __left0__ [1];\n\t\t\t}\n\t\t}\n\t\treturn tuple ([d, sep, f]);\n\t};\n\tvar dir_val = dict ({});\n\twhile (ts) {\n\t\tvar __left0__ = get_next (fmt);\n\t\tvar d = __left0__ [0];\n\t\tvar sep = __left0__ [1];\n\t\tvar fmt = __left0__ [2];\n\t\tif (sep == '') {\n\t\t\tvar lv = null;\n\t\t\tif (d) {\n\t\t\t\tvar l = -(1);\n\t\t\t\tif (d == 'Y') {\n\t\t\t\t\tvar l = 4;\n\t\t\t\t}\n\t\t\t\telse if (d == 'a') {\n\t\t\t\t\tvar l = len (__weekdays [0]);\n\t\t\t\t}\n\t\t\t\telse if (d == 'A') {\n\t\t\t\t\tvar l = len (__weekdays_long [0]);\n\t\t\t\t}\n\t\t\t\telse if (d == 'b') {\n\t\t\t\t\tvar l = len (__months [0]);\n\t\t\t\t}\n\t\t\t\telse if (__in__ (d, tuple (['d', 'm', 'H', 'M', 'S']))) {\n\t\t\t\t\tvar l = 2;\n\t\t\t\t}\n\t\t\t\tif (l > -(1)) {\n\t\t\t\t\tvar lv = [ts.__getslice__ (0, l, 1), ts.__getslice__ (l, null, 1)];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!(lv)) {\n\t\t\t\tvar lv = [ts, ''];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tvar lv = _lsplit (ts, sep, 1);\n\t\t}\n\t\tif (d == null) {\n\t\t\tvar ts = lv [1];\n\t\t\tcontinue;\n\t\t}\n\t\tvar __left0__ = tuple ([lv [1], lv [0]]);\n\t\tvar ts = __left0__ [0];\n\t\tdir_val [d] = __left0__ [1];\n\t\tif (fmt == '') {\n\t\t\tbreak;\n\t\t}\n\t}\n\tvar t = [1900, 1, 1, 0, 0, 0, 0, 1, -(1)];\n\tvar ignore_keys = [];\n\tvar have_weekday = false;\n\tfor (var [d, v] of dir_val.py_items ()) {\n\t\tif (__in__ (d, ignore_keys)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (d == 'p') {\n\t\t\tcontinue;\n\t\t}\n\t\tif (__in__ (d, __lu.py_keys ())) {\n\t\t\tt [__lu [d]] = int (v);\n\t\t\tcontinue;\n\t\t}\n\t\tif (__in__ (d, tuple (['a', 'A', 'b', 'B']))) {\n\t\t\tvar v = v.lower ();\n\t\t}\n\t\tif (d == 'm') {\n\t\t\tignore_keys.append ('b');\n\t\t\tignore_keys.append ('B');\n\t\t}\n\t\tif (d == 'a') {\n\t\t\tif (!(__in__ (v, __weekdays))) {\n\t\t\t\tvar __except0__ = ValueError ('Weekday unknown in your locale');\n\t\t\t\t__except0__.__cause__ = null;\n\t\t\t\tthrow __except0__;\n\t\t\t}\n\t\t\tvar have_weekday = true;\n\t\t\tt [6] = __weekdays.index (v);\n\t\t}\n\t\telse if (d == 'A') {\n\t\t\tif (!(__in__ (v, __weekdays_long))) {\n\t\t\t\tvar __except0__ = ValueError ('Weekday unknown in your locale');\n\t\t\t\t__except0__.__cause__ = null;\n\t\t\t\tthrow __except0__;\n\t\t\t}\n\t\t\tvar have_weekday = true;\n\t\t\tt [6] = __weekdays_long.index (v);\n\t\t}\n\t\telse if (d == 'b') {\n\t\t\tif (!(__in__ (v, __months))) {\n\t\t\t\tvar __except0__ = ValueError ('Month unknown in your locale');\n\t\t\t\t__except0__.__cause__ = null;\n\t\t\t\tthrow __except0__;\n\t\t\t}\n\t\t\tt [1] = __months.index (v) + 1;\n\t\t}\n\t\telse if (d == 'B') {\n\t\t\tif (!(__in__ (v, __months_long))) {\n\t\t\t\tvar __except0__ = ValueError ('Month unknown in your locale');\n\t\t\t\t__except0__.__cause__ = null;\n\t\t\t\tthrow __except0__;\n\t\t\t}\n\t\t\tt [1] = __months_long.index (v) + 1;\n\t\t}\n\t\telse if (d == 'I') {\n\t\t\tvar ampm = dir_val ['p'] || 'am';\n\t\t\tvar ampm = ampm.lower ();\n\t\t\tvar v = int (v);\n\t\t\tif (v == 12) {\n\t\t\t\tvar v = 0;\n\t\t\t}\n\t\t\telse if (v > 12) {\n\t\t\t\tvar __except0__ = ValueError ((((\"time data '\" + string) + \"' does not match format '\") + format) + \"'\");\n\t\t\t\t__except0__.__cause__ = null;\n\t\t\t\tthrow __except0__;\n\t\t\t}\n\t\t\tif (ampm == 'pm') {\n\t\t\t\tv += 12;\n\t\t\t}\n\t\t\tt [__lu ['H']] = v;\n\t\t}\n\t\telse if (d == 'y') {\n\t\t\tt [0] = 2000 + int (v);\n\t\t}\n\t\telse if (d == 'Z') {\n\t\t\tif (__in__ (v.lower (), ['gmt', 'utc'])) {\n\t\t\t\tt [-(1)] = 0;\n\t\t\t}\n\t\t}\n\t}\n\tvar __date = new Date (0);\n\t__date.setUTCFullYear (t [0]);\n\t__date.setUTCMonth (t [1] - 1);\n\t__date.setUTCDate (t [2]);\n\t__date.setUTCHours (t [3]);\n\tt [7] = _day_of_year (__date, true);\n\tif (!(have_weekday)) {\n\t\tt [6] = __date.getUTCDay () - 1;\n\t}\n\treturn t;\n};var strftime = function (format, t) {\n\tvar zf2 = function (v) {\n\t\tif (v < 10) {\n\t\t\treturn '0' + str (v);\n\t\t}\n\t\treturn v;\n\t};\n\tif (!(t)) {\n\t\tvar t = localtime ();\n\t}\n\tvar f = format;\n\tfor (var d of __lu.py_keys ()) {\n\t\tvar k = '%' + d;\n\t\tif (!(__in__ (k, f))) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar v = zf2 (t [__lu [d]]);\n\t\tvar f = f.py_replace (k, v);\n\t}\n\tfor (var [d, l, pos] of tuple ([tuple (['b', __months, 1]), tuple (['B', __months_long, 1]), tuple (['a', __weekdays, 6]), tuple (['A', __weekdays_long, 6])])) {\n\t\tvar p = t [pos];\n\t\tif (pos == 1) {\n\t\t\tvar p = p - 1;\n\t\t}\n\t\tvar v = l [p].capitalize ();\n\t\tvar f = f.py_replace ('%' + d, v);\n\t}\n\tif (__in__ ('%p', f)) {\n\t\tif (t [3] > 11) {\n\t\t\tvar ap = 'PM';\n\t\t}\n\t\telse {\n\t\t\tvar ap = 'AM';\n\t\t}\n\t\tvar f = f.py_replace ('%p', ap);\n\t}\n\tif (__in__ ('%y', f)) {\n\t\tvar f = f.py_replace ('%y', str (t [0]).__getslice__ (-(2), null, 1));\n\t}\n\tif (__in__ ('%I', f)) {\n\t\tvar v = t [3];\n\t\tif (v == 0) {\n\t\t\tvar v = 12;\n\t\t}\n\t\telse if (v > 12) {\n\t\t\tvar v = v - 12;\n\t\t}\n\t\tvar f = f.py_replace ('%I', zf2 (v));\n\t}\n\treturn f;\n};\n\n//# sourceMappingURL=time.map\nreturn {__debugGetLanguage, __adapt__, __date, __now, __weekdays, __weekdays_long, __d, __months, __months_long, __lu, _lsplit, _local_time_tuple, _utc_time_tuple, _day_of_year, _is_leap, __jan_jun_tz, _daylight, _daylight_in_effect, _timezone, __tzn, _tzname, altzone, timezone, daylight, tzname, time, asctime, mktime, ctime, localtime, gmtime, strptime, strftime};})();\n\n// Transcrypt'ed from Python, 2025-08-21 17:51:45\nvar { AssertionError, AttributeError, BaseException, DeprecationWarning, Exception, IndexError, IterableError, KeyError, NotImplementedError, RuntimeWarning, StopIteration, UserWarning, ValueError, Warning, __JsIterator__, __PyIterator__, __Terminal__, __add__, __and__, __call__, __envir__, __eq__, __floordiv__, __ge__, __get__, __getcm__, __getitem__, __getslice__, __getsm__, __gt__, __i__, __iadd__, __iand__, __idiv__, __ijsmod__, __ilshift__, __imatmul__, __imod__, __imul__, __in__, __init__, __ior__, __ipow__, __irshift__, __isub__, __ixor__, __jsUsePyNext__, __jsmod__, __k__, __kwargtrans__, __le__, __lshift__, __lt__, __matmul__, __mergefields__, __mergekwargtrans__, __mod__, __mul__, __ne__, __neg__, __nest__, __or__, __pow__, __pragma__, __proxy__, __pyUseJsNext__, __rshift__, __setitem__, __setproperty__, __setslice__, __sort__, __specialattrib__, __sub__, __super__, __t__, __terminal__, __truediv__, __withblock__, __xor__, _class_, abs, all, any, assert, bool, bytearray, bytes, callable, chr, copy, deepcopy, delattr, dict, dir, divmod, enumerate, filter, float, getattr, hasattr, input, int, isinstance, issubclass, len, list, map, max, min, ord, pow, print, property, py_TypeError, py_iter, py_metatype, py_next, py_reversed, py_typeof, range, repr, round, set, setattr, sorted, str, sum, tuple, zip } = pret_modules['org.transcrypt.__runtime__'];\nvar module = pret_modules['time'];\nvar { dumps } = pret_modules['json'];\nvar { loads } = pret_modules['json'];\nvar { WeakValueDictionary } = pret_modules['weakref'];\nvar { WeakKeyDictionary } = pret_modules['weakref'];\nvar { object } = pret_modules['org.transcrypt.__runtime__'];\nvar __name__ = '__main__';var pret_factory_0 = function (children, create_fn, props) {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\tcase 'children': var children = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\tcase 'create_fn': var create_fn = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\tcase 'props': var props = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\tvar render_x = function () {\n\t\tif (arguments.length) {\n\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t}\n\t\treturn create_fn (...(children), __kwargtrans__ (props));\n\t};\n\treturn render_x;\n};var pret_factory_3 = function (AnnotatedImage, img_annotation_styles, img_state, time, use_event_callback, use_store_snapshot) {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\tcase 'AnnotatedImage': var AnnotatedImage = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\tcase 'img_annotation_styles': var img_annotation_styles = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\tcase 'img_state': var img_state = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\tcase 'time': var time = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\tcase 'use_event_callback': var use_event_callback = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\tcase 'use_store_snapshot': var use_store_snapshot = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\tvar MyImage = function () {\n\t\tif (arguments.length) {\n\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t}\n\t\tvar tracked_state = use_store_snapshot (img_state);\n\t\tvar on_mouse_select = use_event_callback (function (modkeys, shapes) {\n\t\t\tif (arguments.length) {\n\t\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\t\t\tcase 'modkeys': var modkeys = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\t\tcase 'shapes': var shapes = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t}\n\t\t\tfor (var shp of shapes) {\n\t\t\t\timg_state.append (dict ([['id', str (time.time ())], ['points', shp ['points']], ['label', 'OBJ'], ['style', 'primary']]));\n\t\t\t}\n\t\t});\n\t\tvar on_click = use_event_callback (function (shape_idx, modkeys) {\n\t\t\tif (arguments.length) {\n\t\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\t\t\tcase 'shape_idx': var shape_idx = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\t\tcase 'modkeys': var modkeys = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t}\n\t\t\tif (shape_idx === null) {\n\t\t\t\timg_state.py_clear ();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar old_style = img_state [shape_idx].py_get ('style', 'primary');\n\t\t\t\tvar new_style = (old_style == 'primary' ? 'secondary' : 'primary');\n\t\t\t\timg_state [shape_idx] ['style'] = new_style;\n\t\t\t}\n\t\t});\n\t\treturn AnnotatedImage (__kwargtrans__ ({image: 'https://picsum.photos/400/300', annotations: tracked_state, annotation_styles: img_annotation_styles, on_mouse_select: on_mouse_select, on_click: on_click}));\n\t};\n\treturn MyImage;\n};var pret_factory_9 = function (StandaloneClientManager) {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\tcase 'StandaloneClientManager': var StandaloneClientManager = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\tvar get_standalone_client_manager = function () {\n\t\tif (arguments.length) {\n\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t}\n\t\tif (StandaloneClientManager.manager === null) {\n\t\t\tStandaloneClientManager.manager = StandaloneClientManager ();\n\t\t}\n\t\treturn StandaloneClientManager.manager;\n\t};\n\treturn get_standalone_client_manager;\n};var pret_factory_10 = function () {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\treturn object;\n};var pret_factory_11 = function (WeakKeyDictionary, WeakValueDictionary, make_uuid) {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\tcase 'WeakKeyDictionary': var WeakKeyDictionary = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\tcase 'WeakValueDictionary': var WeakValueDictionary = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\tcase 'make_uuid': var make_uuid = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\tvar __init__ = function (self) {\n\t\tif (arguments.length) {\n\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\t\tcase 'self': var self = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t}\n\t\tself.functions = WeakValueDictionary ();\n\t\tself.states = WeakValueDictionary ();\n\t\tself.states_subscriptions = WeakKeyDictionary ();\n\t\tself.call_futures = dict ({});\n\t\tself.disabled_state_sync = set ();\n\t\tself.uid = make_uuid ();\n\t\tself._current_origin = self.uid;\n\t};\n\treturn __init__;\n};var pret_factory_12 = function () {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\treturn WeakKeyDictionary;\n};var pret_factory_13 = function () {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\treturn WeakValueDictionary;\n};var pret_factory_15 = function () {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\tvar handle_call_failure_msg = function (self, data) {\n\t\tif (arguments.length) {\n\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\t\tcase 'self': var self = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'data': var data = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t}\n\t\tvar __left0__ = tuple ([data ['callback_id'], data ['message']]);\n\t\tvar callback_id = __left0__ [0];\n\t\tvar message = __left0__ [1];\n\t\tvar future = self.call_futures.py_pop (callback_id, null);\n\t\tif (future === null) {\n\t\t\treturn ;\n\t\t}\n\t\tfuture.set_exception (Exception (message));\n\t};\n\treturn handle_call_failure_msg;\n};var pret_factory_16 = function (is_awaitable) {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\tcase 'is_awaitable': var is_awaitable = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\tvar handle_call_msg = async function (self, data) {\n\t\tif (arguments.length) {\n\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\t\tcase 'self': var self = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'data': var data = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t}\n\t\tvar __left0__ = tuple ([data ['function_id'], data ['args'], data ['kwargs'], data ['callback_id']]);\n\t\tvar function_id = __left0__ [0];\n\t\tvar args = __left0__ [1];\n\t\tvar kwargs = __left0__ [2];\n\t\tvar callback_id = __left0__ [3];\n\t\ttry {\n\t\t\tvar fn = self.functions [function_id];\n\t\t\tvar result = fn (...(args), __kwargtrans__ (kwargs));\n\t\t\tvar result = (is_awaitable (result) ? await result : result);\n\t\t\treturn tuple (['call_success', dict ([['callback_id', callback_id], ['value', result]])]);\n\t\t}\n\t\tcatch (__except0__) {\n\t\t\tif (isinstance (__except0__, Exception)) {\n\t\t\t\tvar e = __except0__;\n\t\t\t\treturn tuple (['call_failure', dict ([['callback_id', callback_id], ['message', str (e)]])]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow __except0__;\n\t\t\t}\n\t\t}\n\t};\n\treturn handle_call_msg;\n};var pret_factory_18 = function () {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\tvar handle_call_success_msg = function (self, data) {\n\t\tif (arguments.length) {\n\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\t\tcase 'self': var self = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'data': var data = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t}\n\t\tvar __left0__ = tuple ([data ['callback_id'], data ['value']]);\n\t\tvar callback_id = __left0__ [0];\n\t\tvar value = __left0__ [1];\n\t\tvar future = self.call_futures.py_pop (callback_id, null);\n\t\tif (future === null) {\n\t\t\treturn ;\n\t\t}\n\t\tfuture.set_result (value);\n\t};\n\treturn handle_call_success_msg;\n};var pret_factory_19 = function () {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\tvar handle_message = function (self, method, data) {\n\t\tif (arguments.length) {\n\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\t\tcase 'self': var self = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'method': var method = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'data': var data = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t}\n\t\tif (method == 'call') {\n\t\t\treturn self.handle_call_msg (data);\n\t\t}\n\t\telse if (method == 'state_change') {\n\t\t\treturn self.handle_state_change_msg (data);\n\t\t}\n\t\telse if (method == 'call_success') {\n\t\t\treturn self.handle_call_success_msg (data);\n\t\t}\n\t\telse if (method == 'call_failure') {\n\t\t\treturn self.handle_call_failure_msg (data);\n\t\t}\n\t\telse if (method == 'state_sync_request') {\n\t\t\treturn self.handle_state_sync_request_msg (data.py_get ('sync_id'));\n\t\t}\n\t\telse {\n\t\t\tvar __except0__ = Exception ('Unknown method: {}'.format (method));\n\t\t\t__except0__.__cause__ = null;\n\t\t\tthrow __except0__;\n\t\t}\n\t};\n\treturn handle_message;\n};var pret_factory_20 = function (b64_decode) {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\tcase 'b64_decode': var b64_decode = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\tvar handle_state_change_msg = function (self, data) {\n\t\tif (arguments.length) {\n\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\t\tcase 'self': var self = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'data': var data = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t}\n\t\tif (data ['origin'] == self.uid) {\n\t\t\treturn ;\n\t\t}\n\t\tvar py_update = b64_decode (data ['update']);\n\t\tvar state = self.states [data ['sync_id']];\n\t\tself._current_origin = data ['origin'];\n\t\tstate.apply_update (py_update);\n\t\tself._current_origin = self.uid;\n\t};\n\treturn handle_state_change_msg;\n};var pret_factory_22 = function () {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\tvar handle_state_sync_request_msg = function (self, sync_id) {\n\t\tif (arguments.length) {\n\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\t\tcase 'self': var self = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'sync_id': var sync_id = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t}\n\t\tif (typeof sync_id == 'undefined' || (sync_id != null && sync_id.hasOwnProperty (\"__kwargtrans__\"))) {;\n\t\t\tvar sync_id = null;\n\t\t};\n\t\tfor (var [sid, state] of self.states.py_items ()) {\n\t\t\tif (sync_id === null || sid == sync_id) {\n\t\t\t\tself.send_state_change (state.get_update (), sid);\n\t\t\t}\n\t\t}\n\t};\n\treturn handle_state_sync_request_msg;\n};var pret_factory_23 = function () {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\tvar register_call_future = function (self, callback_id, future) {\n\t\tif (arguments.length) {\n\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\t\tcase 'self': var self = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'callback_id': var callback_id = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'future': var future = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t}\n\t\tself.call_futures [callback_id] = future;\n\t};\n\treturn register_call_future;\n};var pret_factory_24 = function (function_identifier) {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\tcase 'function_identifier': var function_identifier = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\tvar register_function = function (self, fn) {\n\t\tif (arguments.length) {\n\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\t\tcase 'self': var self = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'fn': var fn = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t}\n\t\tvar identifier = function_identifier (fn);\n\t\tself.functions [identifier] = fn;\n\t\treturn identifier;\n\t};\n\treturn register_function;\n};var pret_factory_26 = function () {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\tvar register_state = function (self, sync_id, doc) {\n\t\tif (arguments.length) {\n\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\t\tcase 'self': var self = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'sync_id': var sync_id = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'doc': var doc = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t}\n\t\tself.states [sync_id] = doc;\n\t\tself.states_subscriptions [doc] = doc.on_update ((function __lambda__ (py_update) {\n\t\t\tif (arguments.length) {\n\t\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\t\t\tcase 'py_update': var py_update = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t}\n\t\t\treturn self.send_state_change (py_update, __kwargtrans__ ({sync_id: sync_id}));\n\t\t}));\n\t};\n\treturn register_state;\n};var pret_factory_27 = function (Future, is_awaitable, make_uuid, start_async_task) {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\tcase 'Future': var Future = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\tcase 'is_awaitable': var is_awaitable = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\tcase 'make_uuid': var make_uuid = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\tcase 'start_async_task': var start_async_task = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\tvar send_call = function (self, function_id, args, kwargs) {\n\t\tif (arguments.length) {\n\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\t\tcase 'self': var self = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'function_id': var function_id = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'args': var args = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'kwargs': var kwargs = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t}\n\t\tvar callback_id = make_uuid ();\n\t\tvar message_future = self.send_message ('call', dict ([['function_id', function_id], ['args', args], ['kwargs', kwargs], ['callback_id', callback_id]]));\n\t\tif (is_awaitable (message_future)) {\n\t\t\tstart_async_task (message_future);\n\t\t}\n\t\tvar future = Future ();\n\t\tself.register_call_future (callback_id, future);\n\t\treturn future;\n\t};\n\treturn send_call;\n};var pret_factory_30 = function () {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\tvar send_message = function (self, method, data) {\n\t\tif (arguments.length) {\n\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\t\tcase 'self': var self = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'method': var method = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'data': var data = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t}\n\t\tvar __except0__ = NotImplementedError ();\n\t\t__except0__.__cause__ = null;\n\t\tthrow __except0__;\n\t};\n\treturn send_message;\n};var pret_factory_31 = function (b64_encode) {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\tcase 'b64_encode': var b64_encode = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\tvar send_state_change = function (self, py_update, sync_id) {\n\t\tif (arguments.length) {\n\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\t\tcase 'self': var self = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'py_update': var py_update = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'sync_id': var sync_id = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t}\n\t\tself.send_message ('state_change', dict ([['update', b64_encode (py_update)], ['sync_id', sync_id], ['origin', self._current_origin]]));\n\t};\n\treturn send_state_change;\n};var pret_factory_33 = function (loads, make_websocket) {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\tcase 'loads': var loads = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\tcase 'make_websocket': var make_websocket = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\tvar __init__ = function (self) {\n\t\tif (arguments.length) {\n\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\t\tcase 'self': var self = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t}\n\t\t__super__ (self.__class__, '__init__') (self);\n\t\tself.websocket = make_websocket ('/ws');\n\t\tvar on_message = function (event) {\n\t\t\tif (arguments.length) {\n\t\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\t\t\tcase 'event': var event = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t}\n\t\t\tvar data = event.data;\n\t\t\tvar data = loads (data);\n\t\t\tself.handle_message (data ['method'], data ['data']);\n\t\t};\n\t\tself.websocket.addEventListener ('message', on_message);\n\t\tself.websocket.addEventListener ('open', (function __lambda__ () {\n\t\t\tif (arguments.length) {\n\t\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t}\n\t\t\treturn self.send_message ('state_sync_request', dict ({}));\n\t\t}));\n\t};\n\treturn __init__;\n};var pret_factory_34 = function () {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\treturn loads;\n};var pret_factory_36 = function (dumps, fetch, is_awaitable) {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\tcase 'dumps': var dumps = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\tcase 'fetch': var fetch = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\tcase 'is_awaitable': var is_awaitable = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\tvar send_message = async function (self, method, data) {\n\t\tif (arguments.length) {\n\t\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t\t\tswitch (__attrib0__) {\n\t\t\t\t\t\tcase 'self': var self = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'method': var method = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t\tcase 'data': var data = __allkwargs0__ [__attrib0__]; break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t}\n\t\tvar response = await fetch ('method', dict ([['method', 'POST'], ['body', dumps (dict ([['method', method], ['data', data]]))], ['headers', dict ([['Content-Type', 'application/json']])]]));\n\t\tvar result = await response.json ();\n\t\tif (__in__ ('method', result) && __in__ ('data', result)) {\n\t\t\tvar future = self.handle_message (result ['method'], result ['data']);\n\t\t\tif (is_awaitable (future)) {\n\t\t\t\tawait future;\n\t\t\t}\n\t\t}\n\t};\n\treturn send_message;\n};var pret_factory_37 = function () {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\treturn dumps;\n};var pret_factory_39 = function () {\n\tif (arguments.length) {\n\t\tvar __ilastarg0__ = arguments.length - 1;\n\t\tif (arguments [__ilastarg0__] && arguments [__ilastarg0__].hasOwnProperty (\"__kwargtrans__\")) {\n\t\t\tvar __allkwargs0__ = arguments [__ilastarg0__--];\n\t\t\tfor (var __attrib0__ in __allkwargs0__) {\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t}\n\treturn module;\n};\n\n//# sourceMappingURL=__main__.map\nfunction pret_factory_1(react_to_py) {\n// py_to_react for @component\nreturn function py_to_react() {\n\tif (\n        arguments.length > 0\n        && arguments[arguments.length - 1]\n        && arguments[arguments.length - 1].hasOwnProperty(\"__kwargtrans__\")\n\t) {\n        var children = Array.prototype.slice.call(arguments, 0, -1);\n        var props = arguments[arguments.length - 1];\n    } else {\n        var children = Array.prototype.slice.call(arguments, 0, -1);\n        var props = {};\n    }\n    delete props.__kwargtrans__;\n    return window.React.createElement(\n        react_to_py,\n        props,\n        ...(Array.isArray(children) ? children : [children])\n    );\n};\n}{pret_factory_1};\n\nfunction pret_factory_2(fn) {\nreturn function react_to_py(props) {\n    var children = props.children || {};\n    var rest = Object.fromEntries(\n        Object.entries(props).filter(([key, _]) => key !== \"children\")\n    );\n    return fn(...Object.values(props.children || {}), __kwargtrans__(rest));\n};\n}{pret_factory_2};\n\nfunction pret_factory_4(name, props_mapping, snapshot) {\nreturn function py_to_react() {\n    var children;\n    var props;\n\tif (\n        arguments.length > 0\n        && arguments[arguments.length - 1]\n        && arguments[arguments.length - 1].hasOwnProperty(\"__kwargtrans__\")\n    ) {\n        children = Array.prototype.slice.call(arguments, 0, -1);\n        props = arguments[arguments.length - 1];\n        delete props.__kwargtrans__;\n        var props = Object.fromEntries(Object.entries(props).map(([k, v]) => [\n            props_mapping[k] || k,\n            snapshot(v)\n        ]));\n    } else {\n        children = Array.from(arguments);\n        props = {};\n    }\n    return window.React.createElement(\n        name,\n        props,\n        ...(Array.isArray(children) ? children : [children])\n    );\n};\n}{pret_factory_4};\n\nfunction pret_factory_5() {\n  return pret_modules.js.Metanno.AnnotatedImage;\n}{pret_factory_5};\n\nfunction pret_factory_6() {\nreturn window.storeLib.snapshot;;\n}{pret_factory_6};\n\nfunction pret_factory_7() {\nreturn (function rebuild_obj(obj, path) {\n           for (var part of path) {\n               obj = obj.get(part);\n           }\n           var proxy = window.storeLib.makeStore(obj);\n           return proxy;\n       });;\n}{pret_factory_7};\n\nfunction pret_factory_8(get_manager) {\nreturn (function rebuild_doc(update, roots, sync_id) {\n    var ydoc = new window.Y.Doc();\n    ydoc.getMap(\"_\");  // Ensure the root map exists\n    ydoc.apply_update(update);\n    if (sync_id) {\n        var manager = get_manager();\n        // Will subscribe to updates on ydoc and let the manager dispatch them\n        // and apply updates to the ydoc when the manager receives them\n        manager.register_state(sync_id, ydoc);\n    }\n    return ydoc;\n});;\n}{pret_factory_8};\n\nfunction pret_factory_14() {\nreturn () => {\n   const cryptoObj = (globalThis.crypto || globalThis.msCrypto);\n   if (!cryptoObj?.getRandomValues) {\n       throw new Error(\"Secure RNG unavailable: crypto.getRandomValues not supported.\");\n   }\n\n   const bytes = new Uint8Array(16);\n   cryptoObj.getRandomValues(bytes);\n\n   // RFC 4122 version & variant bits\n   bytes[6] = (bytes[6] & 0x0f) | 0x40; // version 4\n   bytes[8] = (bytes[8] & 0x3f) | 0x80; // variant 10\n\n   let hex = \"\";\n   for (let i = 0; i < 16; i++) hex += bytes[i].toString(16).padStart(2, \"0\");\n   return hex;\n};\n}{pret_factory_14};\n\nfunction pret_factory_17() {\nreturn function is_awaitable(value) {\n   return true;\n};\n}{pret_factory_17};\n\nfunction pret_factory_21() {\nreturn (function b64_decode(data) {\n    return Uint8Array.from(atob(data), (c) => c.charCodeAt(0));\n});;\n}{pret_factory_21};\n\nfunction pret_factory_25() {\nreturn function function_identifier(func) {\n    throw new Error(\"function_identifier is not implemented in JavaScript\");\n};\n}{pret_factory_25};\n\nfunction pret_factory_28() {\nvar { Exception } = pret_modules['org.transcrypt.__runtime__'];\n\nvar CancelledError = _class_ ('CancelledError', [Exception], {\n    __module__: __name__,\n    get __init__() {return __get__(this, function(self, message) {\n        Error.call(self, message || 'Future was cancelled');\n        self.name = 'CancelledError';\n        self.message = message || 'Future was cancelled';\n    });}\n});\n\nvar Future = _class_ ('Future', [object], {\n    __module__: __name__,\n    // States\n    PENDING: 0,\n    FINISHED: 1,\n    CANCELLED: 2,\n\n    get __init__() {return __get__(this, function(self) {\n        self._state = self.PENDING;\n        self._result = undefined;\n        self._exception = undefined;\n        self._promise = new Promise(function(resolve, reject) {\n            self._resolve = resolve;\n            self._reject = reject;\n        });\n    });},\n\n    // helpers for awaiting\n    get then() {return __get__(this, function(self, onFulfilled, onRejected) {\n        return self._promise.then(onFulfilled, onRejected);\n    });},\n    get catch() {return __get__(this, function(self, onRejected) {\n        return self._promise.catch(onRejected);\n    });},\n    get finally() {return __get__(this, function(self, onFinally) {\n        return self._promise.finally(onFinally);\n    });},\n\n    // properties\n    get done() {return __get__(this, function(self) {\n        return self._state !== self.PENDING;\n    });},\n    get cancelled() {return __get__(this, function(self) {\n        return self._state === self.CANCELLED;\n    });},\n    get result() {return __get__(this, function(self) {\n        if (!self.done()) throw new Error('Future not done yet');\n        if (self.cancelled()) throw new Error('Future was cancelled');\n        if (self._exception !== undefined) throw self._exception;\n        return self._result;\n    });},\n    get exception() {return __get__(this, function(self) {\n        return self.done() ? self._exception : undefined;\n    });},\n\n    // mutators\n    get set_result() {return __get__(this, function(self, value) {\n        if (self.done()) return false;\n        self._state = self.FINISHED;\n        self._result = value;\n        self._resolve(value);\n        return true;\n    });},\n    get set_exception() {return __get__(this, function(self, err) {\n        if (self.done()) return false;\n        self._state = self.FINISHED;\n        self._exception = err instanceof Error ? err : new Error(String(err));\n        self._reject(self._exception);\n        return true;\n    });},\n    get cancel() {return __get__(this, function(self, msg) {\n        if (self.done()) return false;\n        self._state = self.CANCELLED;\n        self._exception = CancelledError(msg || 'Future was cancelled');\n        self._reject(self._exception);\n        return true;\n    });}\n});\n\nFuture.CancelledError = CancelledError;\n\nreturn Future;;\n}{pret_factory_28};\n\nfunction pret_factory_29() {\nreturn function start_async_task(task) {\n    return task;\n};\n}{pret_factory_29};\n\nfunction pret_factory_32() {\nreturn (function b64_encode(data) {\n    var u8 = new Uint8Array(data);\n    var binary = '';\n    for (var i = 0; i < u8.length; i += 32768) {\n        binary += String.fromCharCode.apply(\n          null,\n          u8.subarray(i, i + 32768)\n        );\n    }\n    return btoa(binary);\n});;\n}{pret_factory_32};\n\nfunction pret_factory_35() {\nreturn function make_websocket(resource) {\n    return new WebSocket(resource);\n};\n}{pret_factory_35};\n\nfunction pret_factory_38() {\nreturn (resource, options) => {\n    return fetch(resource, options);\n};\n}{pret_factory_38};\n\nfunction pret_factory_40() {\nreturn function use_event_callback(callback) {\n    const callbackRef = window.React.useRef(callback);\n    callbackRef.current = callback;\n\n    return window.React.useCallback(\n        (function () {return callbackRef.current(...arguments)}),\n        [],\n    );\n};\n}{pret_factory_40};\n\nfunction pret_factory_41() {\nreturn window.storeLib.useSnapshot;\n}{pret_factory_41};\n\nreturn {pret_factory_0, pret_factory_3, pret_factory_9, pret_factory_10, pret_factory_11, pret_factory_12, pret_factory_13, pret_factory_15, pret_factory_16, pret_factory_18, pret_factory_19, pret_factory_20, pret_factory_22, pret_factory_23, pret_factory_24, pret_factory_26, pret_factory_27, pret_factory_30, pret_factory_31, pret_factory_33, pret_factory_34, pret_factory_36, pret_factory_37, pret_factory_39, pret_factory_1, pret_factory_2, pret_factory_4, pret_factory_5, pret_factory_6, pret_factory_7, pret_factory_8, pret_factory_14, pret_factory_17, pret_factory_21, pret_factory_25, pret_factory_28, pret_factory_29, pret_factory_32, pret_factory_35, pret_factory_38, pret_factory_40, pret_factory_41};\n//# sourceURL=dynamic_factory.js"]